{"version":3,"file":"static/js/476.9f952f3e.chunk.js","mappings":"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","sources":["components/Translations/TranslationsStyles.ts","components/Forms/TranslateForm/index.tsx","components/Translations/index.tsx","pages/TranslationsPage/index.tsx","utils/formUtils.ts","validations/validationSchema.ts"],"sourcesContent":["import { styled } from \"@mui/system\";\nimport { Typography, Card, Box } from \"@mui/material\";\n\nexport const Title = styled(Typography)(({ theme }) => ({\n  fontSize: \"clamp(34px, 5.55vw, 54px)\",\n  fontWeight: 800,\n  lineHeight: 1.25,\n  letterSpacing: \".01em\",\n  marginBottom: \"24px\",\n  textAlign: \"center\",\n}));\n\nexport const SectionTitle = styled(Typography)(({ theme }) => ({\n  fontSize: \"clamp(26px, 5.55vw, 42px)\",\n  lineHeight: 1.08,\n  fontWeight: 500,\n  letterSpacing: \".01em\",\n  marginBottom: \"24px\",\n  textAlign: \"center\",\n}));\n\nexport const DescriptionBox = styled(Box)(({ theme }) => ({\n  marginBottom: \"48px\",\n  textIndent: \"1em\",\n}));\n\nexport const CustomCard = styled(Card)(({ theme }) => ({\n  width: \"clamp(300px, 50vw, 380px)\",\n  height: \"auto\",\n  borderRadius: \"20px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  marginBottom: \"48px\",\n  padding: \"20px\",\n}));\n\nexport const CustomList = styled(Box)(({ theme }) => ({\n  marginBottom: \"48px\",\n}));\n\nexport const CustomImage = styled(\"img\")(({ theme }) => ({\n  height: \"280px\",\n  width: \"clamp(300px, 50vw, 400px)\",\n  objectFit: \"cover\",\n  borderRadius: \"20px\",\n  marginBottom: \"24px\",\n}));\n","import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Grid,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { translationSchema } from \"validations/validationSchema\";\nimport { getErrorMessage } from \"utils/formUtils\";\n\nexport interface IFormInput {\n  name: string;\n  phone: string;\n  email: string;\n  language: string;\n  message: string;\n  file: FileList;\n}\n\ninterface TranslationFormProps {\n  onClose: () => void;\n}\n\nconst TranslationForm: React.FC<TranslationFormProps> = ({ onClose }) => {\n  const { t } = useTranslation();\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm<IFormInput>({\n    resolver: yupResolver(translationSchema) as any,\n  });\n\n  const files = watch(\"file\");\n\n  const onSubmit = (data: IFormInput) => {\n    console.log(\"Form Data:\", data);\n    onClose();\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 6, mb: 6, mr: 4 }}>\n        <Typography\n          sx={{\n            fontSize: \"24px\",\n            textAlign: \"center\",\n            marginBottom: \"28px\",\n          }}\n        >\n          {t(\"form.calculate_title\")}\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Controller\n                name=\"name\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t(\"form.name\")}\n                    fullWidth\n                    error={!!errors.name}\n                    helperText={getErrorMessage(errors, \"name\")}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"phone\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t(\"form.phone\")}\n                    fullWidth\n                    error={!!errors.phone}\n                    helperText={getErrorMessage(errors, \"phone\")}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"email\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t(\"form.email\")}\n                    fullWidth\n                    error={!!errors.email}\n                    helperText={getErrorMessage(errors, \"email\")}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"language\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t(\"form.language\")}\n                    fullWidth\n                    error={!!errors.language}\n                    helperText={getErrorMessage(errors, \"language\")}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Controller\n                name=\"message\"\n                control={control}\n                render={({ field }) => (\n                  <TextField\n                    {...field}\n                    label={t(\"form.message\")}\n                    fullWidth\n                    multiline\n                    rows={4}\n                    error={!!errors.message}\n                    helperText={getErrorMessage(errors, \"message\")}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button variant=\"outlined\" component=\"label\" fullWidth>\n                {t(\"form.upload_file\")}\n                <input\n                  type=\"file\"\n                  hidden\n                  onChange={(e) => {\n                    if (e.target.files && e.target.files.length > 0) {\n                      setValue(\"file\", e.target.files);\n                    }\n                  }}\n                />\n              </Button>\n              {errors.file && (\n                <Typography color=\"error\" variant=\"body2\">\n                  {getErrorMessage(errors, \"file\")}\n                </Typography>\n              )}\n              <List>\n                {files &&\n                  Array.from(files).map((file, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={file.name} />\n                    </ListItem>\n                  ))}\n              </List>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                color=\"primary\"\n                fullWidth\n              >\n                {t(\"form.submit\")}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nexport default TranslationForm;\n","import React, { useState, forwardRef, ReactElement, Ref } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Container,\n  Typography,\n  ListItem,\n  ListItemText,\n  Grid,\n  Button,\n  Box,\n  Dialog,\n  IconButton,\n  Slide,\n  DialogTitle,\n  DialogContent,\n  SlideProps,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport TranslationForm from \"components/Forms/TranslateForm\";\n\nimport {\n  SectionTitle,\n  DescriptionBox,\n  CustomList,\n  CustomImage,\n  Title,\n} from \"./TranslationsStyles\";\nimport TranslationsImg from \"assets/pictures/jpg/translate.jpg\";\n\nconst useArrayTranslation = (key: string): string[] => {\n  const { t } = useTranslation();\n  return t(key, { returnObjects: true }) as unknown as string[];\n};\n\nconst Transition = forwardRef(function Transition(\n  props: SlideProps & { children: ReactElement<any, any> },\n  ref: Ref<unknown>\n) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst Translations: React.FC = () => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n\n  const services = useArrayTranslation(\"translation.services\");\n  const oralServices = useArrayTranslation(\n    \"translation.oralTranslation.services\"\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Container>\n      <Title variant=\"h2\" gutterBottom>\n        {t(\"translation.title\")}\n      </Title>\n\n      <SectionTitle variant=\"h6\" gutterBottom>\n        {t(\"translation.subtitle\")}\n      </SectionTitle>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={8} style={{ maxWidth: 720 }}>\n          <CustomList>\n            {services.map((service, index) => (\n              <ListItem key={index}>\n                <ListItemText primary={`• ${service}`} />\n              </ListItem>\n            ))}\n          </CustomList>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <CustomImage src={TranslationsImg} alt=\"Translation Services\" />\n        </Grid>\n      </Grid>\n\n      <DescriptionBox>\n        <SectionTitle variant=\"h5\" gutterBottom>\n          {t(\"translation.writtenTranslation.title\")}\n        </SectionTitle>\n        <Typography paragraph>\n          {t(\"translation.writtenTranslation.description\")}\n        </Typography>\n        <Typography paragraph mb={6}>\n          {t(\"translation.writtenTranslation.details\")}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"center\" my={2} mb={6}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n            {t(\"form.calculate_title\")}\n          </Button>\n        </Box>\n\n        <Dialog\n          open={open}\n          TransitionComponent={Transition}\n          onClose={handleClose}\n          PaperProps={{\n            sx: { borderRadius: 4 },\n          }}\n        >\n          <DialogTitle\n            sx={{ padding: \"30px\", fontSize: \"24px\", textAlign: \"center\" }}\n          >\n            {t(\"form.calculate_title\")}\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              sx={{\n                position: \"absolute\",\n                right: 8,\n                top: 8,\n                color: (theme) => theme.palette.grey[500],\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent sx={{ padding: \"30px\" }}>\n            <TranslationForm onClose={handleClose} />\n          </DialogContent>\n        </Dialog>\n\n        <SectionTitle variant=\"h6\" gutterBottom>\n          {t(\"translation.certificationTypes.title\")}\n        </SectionTitle>\n        <Typography paragraph>\n          {t(\"translation.certificationTypes.agencySeal\")}\n        </Typography>\n        <Typography paragraph>\n          {t(\"translation.certificationTypes.notarySeal\")}\n        </Typography>\n      </DescriptionBox>\n\n      <DescriptionBox>\n        <SectionTitle variant=\"h5\" gutterBottom>\n          {t(\"translation.oralTranslation.title\")}\n        </SectionTitle>\n        <Typography paragraph>\n          {t(\"translation.oralTranslation.description\")}\n        </Typography>\n        <CustomList>\n          {oralServices.map((service, index) => (\n            <ListItem key={index}>\n              <ListItemText primary={`• ${service}`} />\n            </ListItem>\n          ))}\n        </CustomList>\n      </DescriptionBox>\n\n      <DescriptionBox>\n        <SectionTitle variant=\"h6\" gutterBottom>\n          {t(\"translation.voiceOver.title\")}\n        </SectionTitle>\n        <Typography paragraph>\n          {t(\"translation.voiceOver.description\")}\n        </Typography>\n      </DescriptionBox>\n    </Container>\n  );\n};\n\nexport default Translations;\n","import Translations from \"components/Translations\";\nimport React from \"react\";\n\nconst TranslationsPage: React.FC = () => {\n  return (\n    <div>\n      <Translations />\n    </div>\n  );\n};\n\nexport default TranslationsPage;\n","import { FieldErrors } from \"react-hook-form\";\n\nexport const getErrorMessage = (errors: FieldErrors, path: string) => {\n  const keys = path.split(\".\");\n  let error: any = errors;\n\n  for (const key of keys) {\n    if (!error[key]) {\n      return undefined;\n    }\n    error = error[key];\n  }\n  return error?.message;\n};\n","import * as yup from \"yup\";\nimport i18next from \"i18next\";\n\nconst personalInfoSchema = yup.object().shape({\n  surname: yup.string().required(i18next.t(\"errors.required\")),\n  givenName: yup.string().required(i18next.t(\"errors.required\")),\n  patronymic: yup.string().required(i18next.t(\"errors.required\")),\n  birthDate: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  photo: yup.mixed().required(i18next.t(\"errors.required\")),\n  passportCopy: yup.mixed().required(i18next.t(\"errors.required\")),\n  passportDetails: yup.string().required(i18next.t(\"errors.required\")),\n  passportOrInn: yup.string().required(i18next.t(\"errors.required\")),\n  otherNames: yup.string().required(i18next.t(\"errors.required\")),\n  birthPlaceAndDate: yup.string().required(i18next.t(\"errors.required\")),\n  passportLost: yup.boolean().required(i18next.t(\"errors.required\")),\n  passportLostDetails: yup.string().when(\"passportLost\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  otherCitizenship: yup.boolean().required(i18next.t(\"errors.required\")),\n  otherPassportDetails: yup.string().when(\"otherCitizenship\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  residenceAddress: yup.string().required(i18next.t(\"errors.required\")),\n  registeredAddress: yup.string().required(i18next.t(\"errors.required\")),\n  contactNumber: yup.string().required(i18next.t(\"errors.required\")),\n  contactNumbersLast5Years: yup.string().required(i18next.t(\"errors.required\")),\n  emailAddress: yup\n    .string()\n    .email(i18next.t(\"errors.invalidEmail\"))\n    .required(i18next.t(\"errors.required\")),\n  emailsLast5Years: yup.string().required(i18next.t(\"errors.required\")),\n  socialMedia: yup.array().of(\n    yup.object().shape({\n      name: yup.string().required(i18next.t(\"errors.required\")),\n      id: yup.string().required(i18next.t(\"errors.required\")),\n    })\n  ),\n  otherMediaResources: yup.boolean().required(i18next.t(\"errors.required\")),\n  otherMediaResourceDetails: yup.string().when(\"otherMediaResources\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n});\n\nconst familyInfoSchema = yup.object().shape({\n  fatherName: yup.string().required(i18next.t(\"errors.required\")),\n  fatherDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  motherName: yup.string().required(i18next.t(\"errors.required\")),\n  motherDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  parentsInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  maritalStatus: yup.string().required(i18next.t(\"errors.required\")),\n  spouseName: yup.string().required(i18next.t(\"errors.required\")),\n  spouseMaidenName: yup.string().required(i18next.t(\"errors.required\")),\n  spouseDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  spouseBirthPlace: yup.string().required(i18next.t(\"errors.required\")),\n  spouseNationality: yup.string().required(i18next.t(\"errors.required\")),\n  spouseAddress: yup.string().required(i18next.t(\"errors.required\")),\n  previousMarriages: yup.string().required(i18next.t(\"errors.required\")),\n  previousSpouses: yup.string().required(i18next.t(\"errors.required\")),\n  previousSpouseDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  marriageStartDate: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  marriageEndDate: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  previousSpouseBirthPlace: yup.string().required(i18next.t(\"errors.required\")),\n  previousSpouseNationality: yup\n    .string()\n    .required(i18next.t(\"errors.required\")),\n  relativesInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  relativeNames: yup.string().when(\"relativesInUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n  }),\n  relativeStatus: yup.string().when(\"relativesInUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n  }),\n  otherRelativesInUSA: yup.string().required(i18next.t(\"errors.required\")),\n});\n\nconst purposeOfTravelSchema = yup.object().shape({\n  travelPlans: yup.object().shape({\n    arrivalDate: yup\n      .date()\n      .typeError(i18next.t(\"errors.invalidDate\"))\n      .required(i18next.t(\"errors.required\")),\n    arrivalCity: yup.string().required(i18next.t(\"errors.required\")),\n    placesToVisit: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  addressInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  invitingParty: yup.object().shape({\n    name: yup.string().required(i18next.t(\"errors.required\")),\n    phone: yup\n      .string()\n      .required(i18next.t(\"errors.required\"))\n      .matches(/^[0-9]+$/, i18next.t(\"errors.invalidPhone\")),\n    email: yup\n      .string()\n      .email(i18next.t(\"errors.invalidEmail\"))\n      .required(i18next.t(\"errors.required\")),\n    relationship: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  durationOfStay: yup.string().required(i18next.t(\"errors.required\")),\n  tripFunding: yup.string().required(i18next.t(\"errors.required\")),\n  travelPurpose: yup.string().required(i18next.t(\"errors.required\")),\n  travelCompanions: yup.string().required(i18next.t(\"errors.required\")),\n  tripSponsor: yup.string().required(i18next.t(\"errors.required\")),\n  sponsorInfo: yup.object().when(\"tripSponsor\", {\n    is: \"otherPersonOrCompany\",\n    then: (schema) =>\n      schema.shape({\n        surname: yup.string().required(i18next.t(\"errors.required\")),\n        name: yup.string().required(i18next.t(\"errors.required\")),\n        address: yup.string().required(i18next.t(\"errors.required\")),\n        phone: yup\n          .string()\n          .required(i18next.t(\"errors.required\"))\n          .matches(/^[0-9]+$/, i18next.t(\"errors.invalidPhone\")),\n        email: yup\n          .string()\n          .email(i18next.t(\"errors.invalidEmail\"))\n          .required(i18next.t(\"errors.required\")),\n        relationship: yup.string().required(i18next.t(\"errors.required\")),\n      }),\n    otherwise: (schema) =>\n      schema.shape({\n        surname: yup.string().notRequired(),\n        name: yup.string().notRequired(),\n        address: yup.string().notRequired(),\n        phone: yup.string().notRequired(),\n        email: yup.string().notRequired(),\n        relationship: yup.string().notRequired(),\n      }),\n  }),\n});\n\nconst travelHistorySchema = yup.object().shape({\n  countriesVisited: yup.string().required(i18next.t(\"errors.required\")),\n  visitedUSA: yup.string().required(i18next.t(\"errors.required\")),\n  visaDates: yup.string().when(\"visitedUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  visaNumber: yup.string().when(\"visitedUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  visaDenied: yup.string().required(i18next.t(\"errors.required\")),\n  denialDate: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  denialPlace: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  denialType: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  previousTravel: yup.string().required(i18next.t(\"errors.required\")),\n  arrivalDate0: yup.string().when(\"previousTravel\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  stayDuration0: yup.string().when(\"previousTravel\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n\n  immigrationPetition: yup.string().required(i18next.t(\"errors.required\")),\n  petitionDetails: yup.string().when(\"immigrationPetition\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  driverLicense: yup.string().required(i18next.t(\"errors.required\")),\n  licenseDetails: yup.string().when(\"driverLicense\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  ssn: yup.string().required(i18next.t(\"errors.required\")),\n  ssnDetails: yup.string().when(\"ssn\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n});\n\nconst workAndEducationSchema = yup.object().shape({\n  currentEmployer: yup.object().shape({\n    companyName: yup.string().required(i18next.t(\"errors.required\")),\n    address: yup.string().required(i18next.t(\"errors.required\")),\n    phone: yup.string().required(i18next.t(\"errors.required\")),\n    startDate: yup.date().required(i18next.t(\"errors.required\")),\n    position: yup.string().required(i18next.t(\"errors.required\")),\n    duties: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  averageMonthlyIncome: yup.number().required(i18next.t(\"errors.required\")),\n  previousEmployer: yup.array().of(\n    yup.object().shape({\n      companyName: yup.string().required(i18next.t(\"errors.required\")),\n      address: yup.string().required(i18next.t(\"errors.required\")),\n      phone: yup.string().required(i18next.t(\"errors.required\")),\n      startDate: yup.date().required(i18next.t(\"errors.required\")),\n      position: yup.string().required(i18next.t(\"errors.required\")),\n      duties: yup.string().required(i18next.t(\"errors.required\")),\n    })\n  ),\n  highSchool: yup.object().shape({\n    name: yup.string().required(i18next.t(\"errors.required\")),\n    address: yup.string().required(i18next.t(\"errors.required\")),\n    startDate: yup.date().required(i18next.t(\"errors.required\")),\n    endDate: yup.date().required(i18next.t(\"errors.required\")),\n  }),\n  higherEducation: yup.array().of(\n    yup.object().shape({\n      name: yup.string().required(i18next.t(\"errors.required\")),\n      address: yup.string().required(i18next.t(\"errors.required\")),\n      startDate: yup.date().required(i18next.t(\"errors.required\")),\n      endDate: yup.date().required(i18next.t(\"errors.required\")),\n      faculty: yup.string().required(i18next.t(\"errors.required\")),\n    })\n  ),\n  socialOrganizations: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n  tribe: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n  militaryService: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n});\n\nconst loginSchema = yup.object({\n  email: yup\n    .string()\n    .email(i18next.t(\"email.invalid\"))\n    .required(i18next.t(\"email.required\")),\n  password: yup\n    .string()\n    .min(6, i18next.t(\"password.min\"))\n    .required(i18next.t(\"password.required\")),\n});\n\nconst registerSchema = yup.object({\n  firstName: yup.string().required(i18next.t(\"firstName\")),\n  lastName: yup.string().required(i18next.t(\"lastName\")),\n  email: yup\n    .string()\n    .email(i18next.t(\"email.invalid\"))\n    .required(i18next.t(\"email.required\")),\n  password: yup\n    .string()\n    .min(6, i18next.t(\"password.min\"))\n    .required(i18next.t(\"password.required\")),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), undefined], i18next.t(\"password.confirm\"))\n    .required(i18next.t(\"confirmPassword\")),\n});\n\nconst SUPPORTED_FORMATS = [\n  \"application/pdf\",\n  \"text/plain\",\n  \"application/msword\",\n];\n\nconst translationSchema = yup.object().shape({\n  name: yup.string().required(i18next.t(\"form.errors.name_required\")),\n  phone: yup.string().required(i18next.t(\"form.errors.phone_required\")),\n  email: yup\n    .string()\n    .email(i18next.t(\"form.errors.email_invalid\"))\n    .required(i18next.t(\"form.errors.email_required\")),\n  language: yup.string().required(i18next.t(\"form.errors.language_required\")),\n  message: yup.string().required(i18next.t(\"form.errors.message_required\")),\n  file: yup\n    .mixed()\n    .required(i18next.t(\"form.errors.file_required\"))\n    .test(\"fileSize\", i18next.t(\"form.errors.file_size\"), (value) => {\n      if (!value || !(value instanceof FileList)) {\n        return false;\n      }\n      return value[0]?.size <= 10485760;\n    })\n    .test(\"fileType\", i18next.t(\"form.errors.file_type\"), (value) => {\n      if (!value || !(value instanceof FileList)) {\n        return false;\n      }\n      return SUPPORTED_FORMATS.includes(value[0]?.type);\n    }),\n});\n\nconst schema = yup.object().shape({\n  personalInfo: personalInfoSchema,\n  familyInfo: familyInfoSchema,\n  purposeOfTravel: purposeOfTravelSchema,\n  travelHistory: travelHistorySchema,\n  workAndEducation: workAndEducationSchema,\n  loginSchema: loginSchema,\n  registerSchema: registerSchema,\n});\nexport { schema, loginSchema, registerSchema, translationSchema };\n"],"names":["Title","styled","Typography","_ref","theme","fontSize","fontWeight","lineHeight","letterSpacing","marginBottom","textAlign","SectionTitle","_ref2","DescriptionBox","Box","_ref3","textIndent","CustomList","Card","_ref4","width","height","borderRadius","display","alignItems","justifyContent","padding","_ref5","CustomImage","_ref6","objectFit","onClose","t","useTranslation","control","handleSubmit","formState","errors","setValue","watch","useForm","resolver","yupResolver","translationSchema","files","_jsx","Container","maxWidth","children","_jsxs","sx","mt","mb","mr","onSubmit","data","console","log","Grid","container","spacing","item","xs","Controller","name","render","field","TextField","label","fullWidth","error","helperText","getErrorMessage","phone","email","language","multiline","rows","message","Button","variant","component","type","hidden","onChange","e","target","length","file","color","List","Array","from","map","index","ListItem","ListItemText","primary","useArrayTranslation","key","returnObjects","Transition","forwardRef","props","ref","Slide","direction","Translations","open","setOpen","useState","services","oralServices","handleClose","gutterBottom","sm","style","service","concat","src","TranslationsImg","alt","paragraph","my","onClick","handleClickOpen","Dialog","TransitionComponent","PaperProps","DialogTitle","IconButton","position","right","top","palette","grey","CloseIcon","DialogContent","TranslationForm","TranslationsPage","path","_error","keys","split","personalInfoSchema","yup","shape","surname","required","i18next","givenName","patronymic","birthDate","typeError","photo","passportCopy","passportDetails","passportOrInn","otherNames","birthPlaceAndDate","passportLost","passportLostDetails","when","is","then","schema","otherwise","notRequired","otherCitizenship","otherPassportDetails","residenceAddress","registeredAddress","contactNumber","contactNumbersLast5Years","emailAddress","emailsLast5Years","socialMedia","of","id","otherMediaResources","otherMediaResourceDetails","familyInfoSchema","fatherName","fatherDOB","motherName","motherDOB","parentsInUSA","maritalStatus","spouseName","spouseMaidenName","spouseDOB","spouseBirthPlace","spouseNationality","spouseAddress","previousMarriages","previousSpouses","previousSpouseDOB","marriageStartDate","marriageEndDate","previousSpouseBirthPlace","previousSpouseNationality","relativesInUSA","relativeNames","relativeStatus","otherRelativesInUSA","purposeOfTravelSchema","travelPlans","arrivalDate","arrivalCity","placesToVisit","addressInUSA","invitingParty","matches","relationship","durationOfStay","tripFunding","travelPurpose","travelCompanions","tripSponsor","sponsorInfo","address","travelHistorySchema","countriesVisited","visitedUSA","visaDates","visaNumber","visaDenied","denialDate","denialPlace","denialType","previousTravel","arrivalDate0","stayDuration0","immigrationPetition","petitionDetails","driverLicense","licenseDetails","ssn","ssnDetails","workAndEducationSchema","currentEmployer","companyName","startDate","duties","averageMonthlyIncome","previousEmployer","highSchool","endDate","higherEducation","faculty","socialOrganizations","oneOf","tribe","militaryService","loginSchema","password","min","registerSchema","firstName","lastName","confirmPassword","undefined","SUPPORTED_FORMATS","test","value","_value$","FileList","size","_value$2","includes","personalInfo","familyInfo","purposeOfTravel","travelHistory","workAndEducation"],"sourceRoot":""}