{"version":3,"file":"static/js/166.ef4f070d.chunk.js","mappings":"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","sources":["components/Forms/AuthForm/AuthFormStyles.ts","components/Forms/AuthForm/index.tsx","utils/formUtils.ts","validations/validationSchema.ts"],"sourcesContent":["import { CSSProperties } from \"react\";\n\nexport const authFormStyles: { [key: string]: CSSProperties } = {\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    padding: \"20px\",\n    paddingTop: 0,\n    paddingBottom: \"200px\",\n  },\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Grid,\n  Tabs,\n  Tab,\n  Box,\n  IconButton,\n  InputAdornment,\n} from \"@mui/material\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { LoginFormData, RegisterFormData } from \"services/formData\";\nimport { loginSchema, registerSchema } from \"validations/validationSchema\";\nimport { getErrorMessage } from \"utils/formUtils\";\nimport { useAuth } from \"context/AuthContext\";\nimport { useLoading } from \"context/LoadingContext\";\nimport { authFormStyles } from \"./AuthFormStyles\";\n\ntype BackendError = {\n  response?: {\n    data: {\n      message: string;\n    };\n  };\n  message: string;\n};\n\nconst AuthForm: React.FC = () => {\n  const { t } = useTranslation();\n  const { login, register } = useAuth();\n  const { setLoading } = useLoading();\n  const [isLogin, setIsLogin] = useState(true);\n  const [emailError, setEmailError] = useState<string | null>(null);\n  const [passwordError, setPasswordError] = useState<string | null>(null);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const apiUrl =\n    process.env.NODE_ENV === \"production\"\n      ? process.env.REACT_APP_API_URL_PRODUCTION\n      : process.env.REACT_APP_API_URL_LOCAL;\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<LoginFormData | RegisterFormData>({\n    resolver: yupResolver(isLogin ? loginSchema : registerSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  const onSubmit = async (data: LoginFormData | RegisterFormData) => {\n    setLoading(true);\n    try {\n      if (isLogin) {\n        const response = await axios.post(`${apiUrl}/auth/login`, data);\n        login(response.data.token, response.data.user);\n      } else {\n        await register(data);\n      }\n      reset();\n      setIsLogin(true);\n      setEmailError(null);\n      setPasswordError(null);\n    } catch (error) {\n      const backendError = error as BackendError;\n      const message = backendError.response\n        ? backendError.response.data.message\n        : backendError.message;\n      if (message === \"User with this email does not exist\") {\n        setEmailError(t(\"auth.user_not_found\"));\n      } else if (message === \"Invalid credentials\") {\n        setPasswordError(t(\"auth.invalid_password\"));\n      } else {\n        setEmailError(null);\n        setPasswordError(null);\n      }\n      console.error(\"Error:\", message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSwitch = (event: React.SyntheticEvent, newValue: number) => {\n    setIsLogin(newValue === 0);\n    setEmailError(null);\n    setPasswordError(null);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const springConfig = {\n    delay: 2,\n    duration: 2,\n    from: { opacity: 0, transform: \"translateY(20px)\" },\n    to: { opacity: 1, transform: \"translateY(0)\" },\n  };\n\n  const animation = useSpring(springConfig);\n\n  return (\n    <animated.div style={animation}>\n      <Container style={authFormStyles.root}>\n        <Box sx={{ maxWidth: 400, mx: \"auto\", textAlign: \"center\" }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {isLogin ? t(\"auth.login\") : t(\"auth.register\")}\n          </Typography>\n          <Tabs\n            value={isLogin ? 0 : 1}\n            onChange={handleSwitch}\n            centered\n            sx={{ marginBottom: 2 }}\n          >\n            <Tab label={t(\"auth.login\")} />\n            <Tab label={t(\"auth.register\")} />\n          </Tabs>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Grid container spacing={2}>\n              {!isLogin && (\n                <>\n                  <Grid item xs={12}>\n                    <Controller\n                      name=\"firstName\"\n                      control={control}\n                      render={({ field }) => (\n                        <TextField\n                          label={t(\"auth.first_name\")}\n                          fullWidth\n                          {...field}\n                          error={!!getErrorMessage(errors, \"firstName\")}\n                          helperText={getErrorMessage(errors, \"firstName\")}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Controller\n                      name=\"lastName\"\n                      control={control}\n                      render={({ field }) => (\n                        <TextField\n                          label={t(\"auth.last_name\")}\n                          fullWidth\n                          {...field}\n                          error={!!getErrorMessage(errors, \"lastName\")}\n                          helperText={getErrorMessage(errors, \"lastName\")}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </>\n              )}\n              <Grid item xs={12}>\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  render={({ field }) => (\n                    <TextField\n                      label={t(\"auth.email\")}\n                      fullWidth\n                      {...field}\n                      error={!!getErrorMessage(errors, \"email\") || !!emailError}\n                      helperText={\n                        getErrorMessage(errors, \"email\") || emailError\n                      }\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  render={({ field }) => (\n                    <TextField\n                      label={t(\"auth.password\")}\n                      type={showPassword ? \"text\" : \"password\"}\n                      fullWidth\n                      {...field}\n                      error={\n                        !!getErrorMessage(errors, \"password\") || !!passwordError\n                      }\n                      helperText={\n                        getErrorMessage(errors, \"password\") || passwordError\n                      }\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              onClick={handleClickShowPassword}\n                              edge=\"end\"\n                            >\n                              {showPassword ? (\n                                <Visibility style={{ fontSize: 18 }} />\n                              ) : (\n                                <VisibilityOff style={{ fontSize: 18 }} />\n                              )}\n                            </IconButton>\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  )}\n                />\n              </Grid>\n              {!isLogin && (\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"confirmPassword\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        label={t(\"auth.confirm_password\")}\n                        type={showPassword ? \"text\" : \"password\"}\n                        fullWidth\n                        {...field}\n                        error={!!getErrorMessage(errors, \"confirmPassword\")}\n                        helperText={getErrorMessage(errors, \"confirmPassword\")}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                onClick={handleClickShowPassword}\n                                edge=\"end\"\n                              >\n                                {showPassword ? (\n                                  <Visibility style={{ fontSize: 18 }} />\n                                ) : (\n                                  <VisibilityOff style={{ fontSize: 18 }} />\n                                )}\n                              </IconButton>\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                    )}\n                  />\n                </Grid>\n              )}\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                >\n                  {isLogin ? t(\"auth.login\") : t(\"auth.register\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Container>\n    </animated.div>\n  );\n};\n\nexport default AuthForm;\n","import { FieldErrors } from \"react-hook-form\";\n\nexport const getErrorMessage = (errors: FieldErrors, path: string) => {\n  const keys = path.split(\".\");\n  let error: any = errors;\n\n  for (const key of keys) {\n    if (!error[key]) {\n      return undefined;\n    }\n    error = error[key];\n  }\n  return error?.message;\n};\n","import * as yup from \"yup\";\nimport i18next from \"i18next\";\n\nconst personalInfoSchema = yup.object().shape({\n  surname: yup.string().required(i18next.t(\"errors.required\")),\n  givenName: yup.string().required(i18next.t(\"errors.required\")),\n  patronymic: yup.string().required(i18next.t(\"errors.required\")),\n  photo: yup.mixed().required(i18next.t(\"errors.required\")),\n  passportCopy: yup.mixed().required(i18next.t(\"errors.required\")),\n  passportDetails: yup.string().required(i18next.t(\"errors.required\")),\n  passportOrInn: yup.string().required(i18next.t(\"errors.required\")),\n  otherNames: yup.string().required(i18next.t(\"errors.required\")),\n  birthPlaceAndDate: yup.string().required(i18next.t(\"errors.required\")),\n  passportLost: yup.boolean().required(i18next.t(\"errors.required\")),\n  passportLostDetails: yup.string().when(\"passportLost\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  otherCitizenship: yup.boolean().required(i18next.t(\"errors.required\")),\n  otherPassportDetails: yup.string().when(\"otherCitizenship\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  residenceAddress: yup.string().required(i18next.t(\"errors.required\")),\n  registeredAddress: yup.string().required(i18next.t(\"errors.required\")),\n  contactNumber: yup.string().required(i18next.t(\"errors.required\")),\n  contactNumbersLast5Years: yup.string().required(i18next.t(\"errors.required\")),\n  emailAddress: yup\n    .string()\n    .email(i18next.t(\"errors.invalidEmail\"))\n    .required(i18next.t(\"errors.required\")),\n  emailsLast5Years: yup.string().required(i18next.t(\"errors.required\")),\n  socialMedia: yup.string().required(i18next.t(\"errors.required\")),\n\n  socialMediaFile: yup.mixed().required(i18next.t(\"errors.required\")),\n  otherMediaResources: yup.boolean().required(i18next.t(\"errors.required\")),\n  otherMediaResourceDetails: yup.string().when(\"otherMediaResources\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n});\n\nconst familyInfoSchema = yup.object().shape({\n  fatherName: yup.string().required(i18next.t(\"errors.required\")),\n  fatherDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  motherName: yup.string().required(i18next.t(\"errors.required\")),\n  motherDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  parentsInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  maritalStatus: yup.string().required(i18next.t(\"errors.required\")),\n  spouseName: yup.string().required(i18next.t(\"errors.required\")),\n  spouseMaidenName: yup.string().required(i18next.t(\"errors.required\")),\n  spouseDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  spouseBirthPlace: yup.string().required(i18next.t(\"errors.required\")),\n  spouseNationality: yup.string().required(i18next.t(\"errors.required\")),\n  spouseAddress: yup.string().required(i18next.t(\"errors.required\")),\n  previousMarriages: yup.string().required(i18next.t(\"errors.required\")),\n  previousSpouses: yup.string(),\n  previousSpouseDOB: yup.date().typeError(i18next.t(\"errors.invalidDate\")),\n  marriageStartDate: yup.date().typeError(i18next.t(\"errors.invalidDate\")),\n  marriageEndDate: yup.date().typeError(i18next.t(\"errors.invalidDate\")),\n  previousSpouseBirthPlace: yup.string(),\n  previousSpouseNationality: yup.string(),\n  relativesInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  relativeNames: yup.string().when(\"relativesInUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n  }),\n  relativeStatus: yup.string().when(\"relativesInUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n  }),\n  otherRelativesInUSA: yup.string().required(i18next.t(\"errors.required\")),\n});\n\nconst purposeOfTravelSchema = yup.object().shape({\n  travelPlans: yup.object().shape({\n    arrivalDate: yup.string().required(i18next.t(\"errors.required\")),\n    arrivalCity: yup.string().required(i18next.t(\"errors.required\")),\n    placesToVisit: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  addressInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  invitingParty: yup.object().shape({\n    name: yup.string().required(i18next.t(\"errors.required\")),\n    phone: yup\n      .string()\n      .required(i18next.t(\"errors.required\"))\n      .matches(/^[0-9]+$/, i18next.t(\"errors.invalidPhone\")),\n    email: yup\n      .string()\n      .email(i18next.t(\"errors.invalidEmail\"))\n      .required(i18next.t(\"errors.required\")),\n    relationship: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  durationOfStay: yup.string().required(i18next.t(\"errors.required\")),\n  tripFunding: yup.string().required(i18next.t(\"errors.required\")),\n  travelPurpose: yup.string().required(i18next.t(\"errors.required\")),\n  travelCompanions: yup.string().required(i18next.t(\"errors.required\")),\n  tripSponsor: yup.string().required(i18next.t(\"errors.required\")),\n  sponsorInfo: yup.object().when(\"tripSponsor\", {\n    is: \"otherPersonOrCompany\",\n    then: (schema) =>\n      schema.shape({\n        surname: yup.string().required(i18next.t(\"errors.required\")),\n        name: yup.string().required(i18next.t(\"errors.required\")),\n        address: yup.string().required(i18next.t(\"errors.required\")),\n        phone: yup\n          .string()\n          .required(i18next.t(\"errors.required\"))\n          .matches(/^[0-9]+$/, i18next.t(\"errors.invalidPhone\")),\n        email: yup\n          .string()\n          .email(i18next.t(\"errors.invalidEmail\"))\n          .required(i18next.t(\"errors.required\")),\n        relationship: yup.string().required(i18next.t(\"errors.required\")),\n      }),\n    otherwise: (schema) =>\n      schema.shape({\n        surname: yup.string().notRequired(),\n        name: yup.string().notRequired(),\n        address: yup.string().notRequired(),\n        phone: yup.string().notRequired(),\n        email: yup.string().notRequired(),\n        relationship: yup.string().notRequired(),\n      }),\n  }),\n});\n\nconst travelHistorySchema = yup.object().shape({\n  countriesVisited: yup.string().required(i18next.t(\"errors.required\")),\n  visitedUSA: yup.string().required(i18next.t(\"errors.required\")),\n  visaDates: yup.string().when(\"visitedUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  visaNumber: yup.string().when(\"visitedUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  visaDenied: yup.string().required(i18next.t(\"errors.required\")),\n  denialDate: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  denialPlace: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  denialType: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  previousTravel: yup.string().required(i18next.t(\"errors.required\")),\n  arrivalDate0: yup.string().when(\"previousTravel\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  stayDuration0: yup.string().when(\"previousTravel\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n\n  immigrationPetition: yup.string().required(i18next.t(\"errors.required\")),\n  petitionDetails: yup.string().when(\"immigrationPetition\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  driverLicense: yup.string().required(i18next.t(\"errors.required\")),\n  licenseDetails: yup.string().when(\"driverLicense\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  ssn: yup.string().required(i18next.t(\"errors.required\")),\n  ssnDetails: yup.string().when(\"ssn\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n});\n\nconst workAndEducationSchema = yup.object().shape({\n  currentEmployer: yup.object().shape({\n    companyName: yup.string().required(i18next.t(\"errors.required\")),\n    address: yup.string().required(i18next.t(\"errors.required\")),\n    phone: yup.string().required(i18next.t(\"errors.required\")),\n    startDate: yup.date().required(i18next.t(\"errors.required\")),\n    position: yup.string().required(i18next.t(\"errors.required\")),\n    duties: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  averageMonthlyIncome: yup.number().required(i18next.t(\"errors.required\")),\n  previousEmployer: yup.array().of(\n    yup.object().shape({\n      companyName: yup.string(),\n      address: yup.string(),\n      phone: yup.string(),\n      startDate: yup.date(),\n      position: yup.string(),\n      duties: yup.string(),\n    })\n  ),\n  highSchool: yup.object().shape({\n    name: yup.string().required(i18next.t(\"errors.required\")),\n    address: yup.string().required(i18next.t(\"errors.required\")),\n    startDate: yup.date().required(i18next.t(\"errors.required\")),\n    endDate: yup.date().required(i18next.t(\"errors.required\")),\n  }),\n  higherEducation: yup.array().of(\n    yup.object().shape({\n      name: yup.string(),\n      address: yup.string(),\n      startDate: yup.date(),\n      endDate: yup.date(),\n      faculty: yup.string(),\n    })\n  ),\n  socialOrganizations: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n  tribe: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n  militaryService: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n});\n\nconst loginSchema = yup.object({\n  email: yup\n    .string()\n    .email(i18next.t(\"email.invalid\"))\n    .required(i18next.t(\"email.required\")),\n  password: yup\n    .string()\n    .min(6, i18next.t(\"password.min\"))\n    .required(i18next.t(\"password.required\")),\n});\n\nconst registerSchema = yup.object({\n  firstName: yup.string().required(i18next.t(\"firstName\")),\n  lastName: yup.string().required(i18next.t(\"lastName\")),\n  email: yup\n    .string()\n    .email(i18next.t(\"email.invalid\"))\n    .required(i18next.t(\"email.required\")),\n  password: yup\n    .string()\n    .min(6, i18next.t(\"password.min\"))\n    .required(i18next.t(\"password.required\")),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), undefined], i18next.t(\"password.confirm\"))\n    .required(i18next.t(\"confirmPassword\")),\n});\n\nconst SUPPORTED_FORMATS = [\n  \"application/pdf\",\n  \"text/plain\",\n  \"application/msword\",\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n];\n\nconst translationSchema = yup.object().shape({\n  name: yup.string().required(i18next.t(\"form.errors.name_required\")),\n  phone: yup.string().required(i18next.t(\"form.errors.phone_required\")),\n  email: yup\n    .string()\n    .email(i18next.t(\"form.errors.email_invalid\"))\n    .required(i18next.t(\"form.errors.email_required\")),\n  language: yup.string().required(i18next.t(\"form.errors.language_required\")),\n  message: yup.string().required(i18next.t(\"form.errors.message_required\")),\n  file: yup\n    .mixed()\n    .required(i18next.t(\"form.errors.file_required\"))\n    .test(\"fileSize\", i18next.t(\"form.errors.file_size\"), (value) => {\n      if (!value || !(value instanceof FileList)) {\n        return false;\n      }\n      return value[0]?.size <= 10485760;\n    })\n    .test(\"fileType\", i18next.t(\"form.errors.file_type\"), (value) => {\n      if (!value || !(value instanceof FileList)) {\n        return false;\n      }\n      return SUPPORTED_FORMATS.includes(value[0]?.type);\n    }),\n});\n\nconst schema = yup.object().shape({\n  personalInfo: personalInfoSchema,\n  familyInfo: familyInfoSchema,\n  purposeOfTravel: purposeOfTravelSchema,\n  travelHistory: travelHistorySchema,\n  workAndEducation: workAndEducationSchema,\n  loginSchema: loginSchema,\n  registerSchema: registerSchema,\n});\nexport { schema, loginSchema, registerSchema, translationSchema };\n"],"names":["authFormStyles","root","display","flexDirection","alignItems","justifyContent","height","padding","paddingTop","paddingBottom","AuthForm","t","useTranslation","login","register","useAuth","setLoading","useLoading","isLogin","setIsLogin","useState","emailError","setEmailError","passwordError","setPasswordError","showPassword","setShowPassword","control","handleSubmit","reset","formState","errors","useForm","resolver","yupResolver","loginSchema","registerSchema","defaultValues","firstName","lastName","email","password","confirmPassword","handleClickShowPassword","animation","useSpring","delay","duration","from","opacity","transform","to","_jsx","animated","div","style","children","Container","_jsxs","Box","sx","maxWidth","mx","textAlign","Typography","variant","gutterBottom","Tabs","value","onChange","handleSwitch","event","newValue","centered","marginBottom","Tab","label","onSubmit","async","response","axios","post","concat","process","data","token","user","error","backendError","message","console","Grid","container","spacing","_Fragment","item","xs","Controller","name","render","_ref","field","TextField","fullWidth","getErrorMessage","helperText","_ref2","_ref3","_ref4","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Visibility","fontSize","VisibilityOff","_ref5","Button","color","path","_error","keys","split","key","personalInfoSchema","yup","shape","surname","required","i18next","givenName","patronymic","photo","passportCopy","passportDetails","passportOrInn","otherNames","birthPlaceAndDate","passportLost","passportLostDetails","when","is","then","schema","otherwise","notRequired","otherCitizenship","otherPassportDetails","residenceAddress","registeredAddress","contactNumber","contactNumbersLast5Years","emailAddress","emailsLast5Years","socialMedia","socialMediaFile","otherMediaResources","otherMediaResourceDetails","familyInfoSchema","fatherName","fatherDOB","typeError","motherName","motherDOB","parentsInUSA","maritalStatus","spouseName","spouseMaidenName","spouseDOB","spouseBirthPlace","spouseNationality","spouseAddress","previousMarriages","previousSpouses","previousSpouseDOB","marriageStartDate","marriageEndDate","previousSpouseBirthPlace","previousSpouseNationality","relativesInUSA","relativeNames","relativeStatus","otherRelativesInUSA","purposeOfTravelSchema","travelPlans","arrivalDate","arrivalCity","placesToVisit","addressInUSA","invitingParty","phone","matches","relationship","durationOfStay","tripFunding","travelPurpose","travelCompanions","tripSponsor","sponsorInfo","address","travelHistorySchema","countriesVisited","visitedUSA","visaDates","visaNumber","visaDenied","denialDate","denialPlace","denialType","previousTravel","arrivalDate0","stayDuration0","immigrationPetition","petitionDetails","driverLicense","licenseDetails","ssn","ssnDetails","workAndEducationSchema","currentEmployer","companyName","startDate","duties","averageMonthlyIncome","previousEmployer","of","highSchool","endDate","higherEducation","faculty","socialOrganizations","oneOf","tribe","militaryService","min","undefined","SUPPORTED_FORMATS","translationSchema","language","file","test","_value$","FileList","size","_value$2","includes","personalInfo","familyInfo","purposeOfTravel","travelHistory","workAndEducation"],"sourceRoot":""}