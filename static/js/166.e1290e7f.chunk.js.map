{"version":3,"file":"static/js/166.e1290e7f.chunk.js","mappings":"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","sources":["components/Forms/AuthForm/AuthFormStyles.ts","components/Forms/AuthForm/index.tsx","utils/formUtils.ts","validations/validationSchema.ts"],"sourcesContent":["import { CSSProperties } from \"react\";\n\nexport const authFormStyles: { [key: string]: CSSProperties } = {\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    padding: \"20px\",\n    paddingTop: 0,\n    paddingBottom: \"200px\",\n  },\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Container,\n  TextField,\n  Button,\n  Typography,\n  Grid,\n  Tabs,\n  Tab,\n  Box,\n} from \"@mui/material\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { authFormStyles } from \"./AuthFormStyles\";\nimport { LoginFormData, RegisterFormData } from \"services/formData\";\nimport { loginSchema, registerSchema } from \"validations/validationSchema\";\nimport { getErrorMessage } from \"utils/formUtils\";\n\nconst AuthForm: React.FC = () => {\n  const { t } = useTranslation();\n  const [isLogin, setIsLogin] = useState(true);\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginFormData | RegisterFormData>({\n    resolver: yupResolver(isLogin ? loginSchema : registerSchema),\n  });\n\n  const onSubmit = (data: LoginFormData | RegisterFormData) => {\n    if (isLogin) {\n      console.log(\"Login:\", data);\n    } else {\n      console.log(\"Register:\", data);\n    }\n  };\n\n  const handleSwitch = (event: React.SyntheticEvent, newValue: number) => {\n    setIsLogin(newValue === 0);\n  };\n\n  const springConfig = {\n    delay: 2,\n    duration: 2,\n    from: { opacity: 0, transform: \"translateY(20px)\" },\n    to: { opacity: 1, transform: \"translateY(0)\" },\n  };\n\n  const animation = useSpring(springConfig);\n\n  return (\n    <animated.div style={animation}>\n      <Container style={authFormStyles.root}>\n        <Box sx={{ maxWidth: 400, mx: \"auto\", textAlign: \"center\" }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {isLogin ? t(\"auth.login\") : t(\"auth.register\")}\n          </Typography>\n          <Tabs\n            value={isLogin ? 0 : 1}\n            onChange={handleSwitch}\n            centered\n            sx={{ marginBottom: 2 }}\n          >\n            <Tab label={t(\"auth.login\")} />\n            <Tab label={t(\"auth.register\")} />\n          </Tabs>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Grid container spacing={2}>\n              {!isLogin && (\n                <>\n                  <Grid item xs={12}>\n                    <Controller\n                      name=\"firstName\"\n                      control={control}\n                      render={({ field }) => (\n                        <TextField\n                          label={t(\"auth.first_name\")}\n                          fullWidth\n                          {...field}\n                          error={!!getErrorMessage(errors, \"firstName\")}\n                          helperText={getErrorMessage(errors, \"firstName\")}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Controller\n                      name=\"lastName\"\n                      control={control}\n                      render={({ field }) => (\n                        <TextField\n                          label={t(\"auth.last_name\")}\n                          fullWidth\n                          {...field}\n                          error={!!getErrorMessage(errors, \"lastName\")}\n                          helperText={getErrorMessage(errors, \"lastName\")}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </>\n              )}\n              <Grid item xs={12}>\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  render={({ field }) => (\n                    <TextField\n                      label={t(\"auth.email\")}\n                      fullWidth\n                      {...field}\n                      error={!!getErrorMessage(errors, \"email\")}\n                      helperText={getErrorMessage(errors, \"email\")}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  render={({ field }) => (\n                    <TextField\n                      label={t(\"auth.password\")}\n                      type=\"password\"\n                      fullWidth\n                      {...field}\n                      error={!!getErrorMessage(errors, \"password\")}\n                      helperText={getErrorMessage(errors, \"password\")}\n                    />\n                  )}\n                />\n              </Grid>\n              {!isLogin && (\n                <Grid item xs={12}>\n                  <Controller\n                    name=\"confirmPassword\"\n                    control={control}\n                    render={({ field }) => (\n                      <TextField\n                        label={t(\"auth.confirm_password\")}\n                        type=\"password\"\n                        fullWidth\n                        {...field}\n                        error={!!getErrorMessage(errors, \"confirmPassword\")}\n                        helperText={getErrorMessage(errors, \"confirmPassword\")}\n                      />\n                    )}\n                  />\n                </Grid>\n              )}\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                >\n                  {isLogin ? t(\"auth.login\") : t(\"auth.register\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Container>\n    </animated.div>\n  );\n};\n\nexport default AuthForm;\n","import { FieldErrors } from \"react-hook-form\";\n\nexport const getErrorMessage = (errors: FieldErrors, path: string) => {\n  const keys = path.split(\".\");\n  let error: any = errors;\n\n  for (const key of keys) {\n    if (!error[key]) {\n      return undefined;\n    }\n    error = error[key];\n  }\n  return error?.message;\n};\n","import * as yup from \"yup\";\nimport i18next from \"i18next\";\n\nconst personalInfoSchema = yup.object().shape({\n  surname: yup.string().required(i18next.t(\"errors.required\")),\n  givenName: yup.string().required(i18next.t(\"errors.required\")),\n  patronymic: yup.string().required(i18next.t(\"errors.required\")),\n  birthDate: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  photo: yup.mixed().required(i18next.t(\"errors.required\")),\n  passportCopy: yup.mixed().required(i18next.t(\"errors.required\")),\n  passportDetails: yup.string().required(i18next.t(\"errors.required\")),\n  passportOrInn: yup.string().required(i18next.t(\"errors.required\")),\n  otherNames: yup.string().required(i18next.t(\"errors.required\")),\n  birthPlaceAndDate: yup.string().required(i18next.t(\"errors.required\")),\n  passportLost: yup.boolean().required(i18next.t(\"errors.required\")),\n  passportLostDetails: yup.string().when(\"passportLost\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  otherCitizenship: yup.boolean().required(i18next.t(\"errors.required\")),\n  otherPassportDetails: yup.string().when(\"otherCitizenship\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  residenceAddress: yup.string().required(i18next.t(\"errors.required\")),\n  registeredAddress: yup.string().required(i18next.t(\"errors.required\")),\n  contactNumber: yup.string().required(i18next.t(\"errors.required\")),\n  contactNumbersLast5Years: yup.string().required(i18next.t(\"errors.required\")),\n  emailAddress: yup\n    .string()\n    .email(i18next.t(\"errors.invalidEmail\"))\n    .required(i18next.t(\"errors.required\")),\n  emailsLast5Years: yup.string().required(i18next.t(\"errors.required\")),\n  socialMedia: yup.array().of(\n    yup.object().shape({\n      name: yup.string().required(i18next.t(\"errors.required\")),\n      id: yup.string().required(i18next.t(\"errors.required\")),\n    })\n  ),\n  otherMediaResources: yup.boolean().required(i18next.t(\"errors.required\")),\n  otherMediaResourceDetails: yup.string().when(\"otherMediaResources\", {\n    is: true,\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n});\n\nconst familyInfoSchema = yup.object().shape({\n  fatherName: yup.string().required(i18next.t(\"errors.required\")),\n  fatherDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  motherName: yup.string().required(i18next.t(\"errors.required\")),\n  motherDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  parentsInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  maritalStatus: yup.string().required(i18next.t(\"errors.required\")),\n  spouseName: yup.string().required(i18next.t(\"errors.required\")),\n  spouseMaidenName: yup.string().required(i18next.t(\"errors.required\")),\n  spouseDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  spouseBirthPlace: yup.string().required(i18next.t(\"errors.required\")),\n  spouseNationality: yup.string().required(i18next.t(\"errors.required\")),\n  spouseAddress: yup.string().required(i18next.t(\"errors.required\")),\n  previousMarriages: yup.string().required(i18next.t(\"errors.required\")),\n  previousSpouses: yup.string().required(i18next.t(\"errors.required\")),\n  previousSpouseDOB: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  marriageStartDate: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  marriageEndDate: yup\n    .date()\n    .typeError(i18next.t(\"errors.invalidDate\"))\n    .required(i18next.t(\"errors.required\")),\n  previousSpouseBirthPlace: yup.string().required(i18next.t(\"errors.required\")),\n  previousSpouseNationality: yup\n    .string()\n    .required(i18next.t(\"errors.required\")),\n  relativesInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  relativeNames: yup.string().when(\"relativesInUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n  }),\n  relativeStatus: yup.string().when(\"relativesInUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n  }),\n  otherRelativesInUSA: yup.string().required(i18next.t(\"errors.required\")),\n});\n\nconst purposeOfTravelSchema = yup.object().shape({\n  travelPlans: yup.object().shape({\n    arrivalDate: yup\n      .date()\n      .typeError(i18next.t(\"errors.invalidDate\"))\n      .required(i18next.t(\"errors.required\")),\n    arrivalCity: yup.string().required(i18next.t(\"errors.required\")),\n    placesToVisit: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  addressInUSA: yup.string().required(i18next.t(\"errors.required\")),\n  invitingParty: yup.object().shape({\n    name: yup.string().required(i18next.t(\"errors.required\")),\n    phone: yup\n      .string()\n      .required(i18next.t(\"errors.required\"))\n      .matches(/^[0-9]+$/, i18next.t(\"errors.invalidPhone\")),\n    email: yup\n      .string()\n      .email(i18next.t(\"errors.invalidEmail\"))\n      .required(i18next.t(\"errors.required\")),\n    relationship: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  durationOfStay: yup.string().required(i18next.t(\"errors.required\")),\n  tripFunding: yup.string().required(i18next.t(\"errors.required\")),\n  travelPurpose: yup.string().required(i18next.t(\"errors.required\")),\n  travelCompanions: yup.string().required(i18next.t(\"errors.required\")),\n  tripSponsor: yup.string().required(i18next.t(\"errors.required\")),\n  sponsorInfo: yup.object().when(\"tripSponsor\", {\n    is: \"otherPersonOrCompany\",\n    then: (schema) =>\n      schema.shape({\n        surname: yup.string().required(i18next.t(\"errors.required\")),\n        name: yup.string().required(i18next.t(\"errors.required\")),\n        address: yup.string().required(i18next.t(\"errors.required\")),\n        phone: yup\n          .string()\n          .required(i18next.t(\"errors.required\"))\n          .matches(/^[0-9]+$/, i18next.t(\"errors.invalidPhone\")),\n        email: yup\n          .string()\n          .email(i18next.t(\"errors.invalidEmail\"))\n          .required(i18next.t(\"errors.required\")),\n        relationship: yup.string().required(i18next.t(\"errors.required\")),\n      }),\n    otherwise: (schema) =>\n      schema.shape({\n        surname: yup.string().notRequired(),\n        name: yup.string().notRequired(),\n        address: yup.string().notRequired(),\n        phone: yup.string().notRequired(),\n        email: yup.string().notRequired(),\n        relationship: yup.string().notRequired(),\n      }),\n  }),\n});\n\nconst travelHistorySchema = yup.object().shape({\n  countriesVisited: yup.string().required(i18next.t(\"errors.required\")),\n  visitedUSA: yup.string().required(i18next.t(\"errors.required\")),\n  visaDates: yup.string().when(\"visitedUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  visaNumber: yup.string().when(\"visitedUSA\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  visaDenied: yup.string().required(i18next.t(\"errors.required\")),\n  denialDate: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  denialPlace: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  denialType: yup.string().when(\"visaDenied\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  previousTravel: yup.string().required(i18next.t(\"errors.required\")),\n  arrivalDate0: yup.string().when(\"previousTravel\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  stayDuration0: yup.string().when(\"previousTravel\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n\n  immigrationPetition: yup.string().required(i18next.t(\"errors.required\")),\n  petitionDetails: yup.string().when(\"immigrationPetition\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  driverLicense: yup.string().required(i18next.t(\"errors.required\")),\n  licenseDetails: yup.string().when(\"driverLicense\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n  ssn: yup.string().required(i18next.t(\"errors.required\")),\n  ssnDetails: yup.string().when(\"ssn\", {\n    is: \"yes\",\n    then: (schema) => schema.required(i18next.t(\"errors.required\")),\n    otherwise: (schema) => schema.notRequired(),\n  }),\n});\n\nconst workAndEducationSchema = yup.object().shape({\n  currentEmployer: yup.object().shape({\n    companyName: yup.string().required(i18next.t(\"errors.required\")),\n    address: yup.string().required(i18next.t(\"errors.required\")),\n    phone: yup.string().required(i18next.t(\"errors.required\")),\n    startDate: yup.date().required(i18next.t(\"errors.required\")),\n    position: yup.string().required(i18next.t(\"errors.required\")),\n    duties: yup.string().required(i18next.t(\"errors.required\")),\n  }),\n  averageMonthlyIncome: yup.number().required(i18next.t(\"errors.required\")),\n  previousEmployer: yup.array().of(\n    yup.object().shape({\n      companyName: yup.string().required(i18next.t(\"errors.required\")),\n      address: yup.string().required(i18next.t(\"errors.required\")),\n      phone: yup.string().required(i18next.t(\"errors.required\")),\n      startDate: yup.date().required(i18next.t(\"errors.required\")),\n      position: yup.string().required(i18next.t(\"errors.required\")),\n      duties: yup.string().required(i18next.t(\"errors.required\")),\n    })\n  ),\n  highSchool: yup.object().shape({\n    name: yup.string().required(i18next.t(\"errors.required\")),\n    address: yup.string().required(i18next.t(\"errors.required\")),\n    startDate: yup.date().required(i18next.t(\"errors.required\")),\n    endDate: yup.date().required(i18next.t(\"errors.required\")),\n  }),\n  higherEducation: yup.array().of(\n    yup.object().shape({\n      name: yup.string().required(i18next.t(\"errors.required\")),\n      address: yup.string().required(i18next.t(\"errors.required\")),\n      startDate: yup.date().required(i18next.t(\"errors.required\")),\n      endDate: yup.date().required(i18next.t(\"errors.required\")),\n      faculty: yup.string().required(i18next.t(\"errors.required\")),\n    })\n  ),\n  socialOrganizations: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n  tribe: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n  militaryService: yup\n    .string()\n    .oneOf([\"yes\", \"no\"])\n    .required(i18next.t(\"errors.required\")),\n});\n\nconst loginSchema = yup.object({\n  email: yup\n    .string()\n    .email(i18next.t(\"email.invalid\"))\n    .required(i18next.t(\"email.required\")),\n  password: yup\n    .string()\n    .min(6, i18next.t(\"password.min\"))\n    .required(i18next.t(\"password.required\")),\n});\n\nconst registerSchema = yup.object({\n  firstName: yup.string().required(i18next.t(\"firstName\")),\n  lastName: yup.string().required(i18next.t(\"lastName\")),\n  email: yup\n    .string()\n    .email(i18next.t(\"email.invalid\"))\n    .required(i18next.t(\"email.required\")),\n  password: yup\n    .string()\n    .min(6, i18next.t(\"password.min\"))\n    .required(i18next.t(\"password.required\")),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), undefined], i18next.t(\"password.confirm\"))\n    .required(i18next.t(\"confirmPassword\")),\n});\n\nconst SUPPORTED_FORMATS = [\n  \"application/pdf\",\n  \"text/plain\",\n  \"application/msword\",\n];\n\nconst translationSchema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  phone: yup.string().required(\"Phone is required\"),\n  email: yup\n    .string()\n    .email(\"Invalid email address\")\n    .required(\"Email is required\"),\n  language: yup.string().required(\"Translation language is required\"),\n  message: yup.string().required(\"Message is required\"),\n  file: yup\n    .mixed()\n    .required(\"File is required\")\n    .test(\"fileSize\", \"File is too large\", (value) => {\n      if (!value || !(value instanceof FileList)) {\n        return false;\n      }\n      return value[0]?.size <= 10485760;\n    })\n    .test(\"fileType\", \"Unsupported File Format\", (value) => {\n      if (!value || !(value instanceof FileList)) {\n        return false;\n      }\n      return SUPPORTED_FORMATS.includes(value[0]?.type);\n    }),\n});\n\nconst schema = yup.object().shape({\n  personalInfo: personalInfoSchema,\n  familyInfo: familyInfoSchema,\n  purposeOfTravel: purposeOfTravelSchema,\n  travelHistory: travelHistorySchema,\n  workAndEducation: workAndEducationSchema,\n  loginSchema: loginSchema,\n  registerSchema: registerSchema,\n});\nexport { schema, loginSchema, registerSchema, translationSchema };\n"],"names":["authFormStyles","root","display","flexDirection","alignItems","justifyContent","height","padding","paddingTop","paddingBottom","AuthForm","t","useTranslation","isLogin","setIsLogin","useState","control","handleSubmit","formState","errors","useForm","resolver","yupResolver","loginSchema","registerSchema","animation","useSpring","delay","duration","from","opacity","transform","to","_jsx","animated","div","style","children","Container","_jsxs","Box","sx","maxWidth","mx","textAlign","Typography","variant","gutterBottom","Tabs","value","onChange","handleSwitch","event","newValue","centered","marginBottom","Tab","label","onSubmit","data","console","log","Grid","container","spacing","_Fragment","item","xs","Controller","name","render","_ref","field","TextField","fullWidth","error","getErrorMessage","helperText","_ref2","_ref3","_ref4","type","_ref5","Button","color","path","_error","keys","split","key","message","personalInfoSchema","yup","shape","surname","required","i18next","givenName","patronymic","birthDate","typeError","photo","passportCopy","passportDetails","passportOrInn","otherNames","birthPlaceAndDate","passportLost","passportLostDetails","when","is","then","schema","otherwise","notRequired","otherCitizenship","otherPassportDetails","residenceAddress","registeredAddress","contactNumber","contactNumbersLast5Years","emailAddress","email","emailsLast5Years","socialMedia","of","id","otherMediaResources","otherMediaResourceDetails","familyInfoSchema","fatherName","fatherDOB","motherName","motherDOB","parentsInUSA","maritalStatus","spouseName","spouseMaidenName","spouseDOB","spouseBirthPlace","spouseNationality","spouseAddress","previousMarriages","previousSpouses","previousSpouseDOB","marriageStartDate","marriageEndDate","previousSpouseBirthPlace","previousSpouseNationality","relativesInUSA","relativeNames","relativeStatus","otherRelativesInUSA","purposeOfTravelSchema","travelPlans","arrivalDate","arrivalCity","placesToVisit","addressInUSA","invitingParty","phone","matches","relationship","durationOfStay","tripFunding","travelPurpose","travelCompanions","tripSponsor","sponsorInfo","address","travelHistorySchema","countriesVisited","visitedUSA","visaDates","visaNumber","visaDenied","denialDate","denialPlace","denialType","previousTravel","arrivalDate0","stayDuration0","immigrationPetition","petitionDetails","driverLicense","licenseDetails","ssn","ssnDetails","workAndEducationSchema","currentEmployer","companyName","startDate","position","duties","averageMonthlyIncome","previousEmployer","highSchool","endDate","higherEducation","faculty","socialOrganizations","oneOf","tribe","militaryService","password","min","firstName","lastName","confirmPassword","undefined","SUPPORTED_FORMATS","translationSchema","language","file","test","_value$","FileList","size","_value$2","includes","personalInfo","familyInfo","purposeOfTravel","travelHistory","workAndEducation"],"sourceRoot":""}